set(PLEXDIR "@PLEXDIR@")
set(ROOTDIR "@ROOTDIR@")
set(DEPENDDIR "@DEPENDDIR@")
set(RESOURCEPATH "@RESOURCEPATH@")
set(BINPATH "@BINPATH@")
set(LIBPATH "@LIBPATH@")
set(ARCH "@ARCH@")
set(EXECUTABLE_NAME "@EXECUTABLE_NAME@")

if(APPLE AND ARCH STREQUAL "arm-osx")
  set(TARGET_ATV2 1)
  set(TARGET_COMMON_DARWIN 1)
elseif(APPLE)
  set(TARGET_COMMON_DARWIN 1)
  set(TARGET_OSX)
elseif(WIN32)
  set(TARGET_WIN32 1)
endif(APPLE AND ARCH STREQUAL "arm-osx")

if(NOT TARGET_WIN32)
  if(TARGET_OSX)
    set(TARGET "${EXECUTABLE_NAME}.app")
  elseif(TARGET_ATV2)
    set(TARGET "${BINPATH}/${EXECUTABLE_NAME}")
  else(TARGET_OSX)
    set(TARGET "${BINPATH}/${EXECUTABLE_NAME}")
  endif(TARGET_OSX)

  function(gp_item_default_embedded_path_override item default_embedded_path_var)
    set(path "@executable_path")
    if(TARGET_OSX)
      set(path "@executable_path/../Frameworks")
    elseif(TARGET_ATV2)
      set(path "@executable_path/Frameworks")
    else(TARGET_COMMON_DARWIN)
      set(path "@executable_path")
    endif(TARGET_OSX)
    set(${default_embedded_path_var} ${path} PARENT_SCOPE)
  endfunction(gp_item_default_embedded_path_override item default_embedded_path_var)

  if(TARGET_COMMON_DARWIN)
    include(${PLEXDIR}/BundleUtilitiesPlex.cmake)
  else(TARGET_COMMON_DARWIN)
    include(BundleUtilities)
  endif(TARGET_COMMON_DARWIN)

  set(BU_CHMOD_BUNDLE_ITEMS ON)
  file(GLOB INST_LIBS ${CMAKE_INSTALL_PREFIX}/${LIBPATH}/*${CMAKE_SHARED_LIBRARY_SUFFIX})
  
  if(ENABLE_PYTHON)
    file(GLOB PYTHON_DYLIB ";${CMAKE_INSTALL_PREFIX}/${LIBPATH}/lib/python2.7/lib-dynload/*.so")
  endif(ENABLE_PYTHON)
  
  set(plugins "${CMAKE_INSTALL_PREFIX}/${RESOURCEPATH}/system/ImageLib-${ARCH}.so")
  message(${CMAKE_INSTALL_PREFIX}/${TARGET})
  fixup_bundle("${CMAKE_INSTALL_PREFIX}/${TARGET}" "${plugins};${INST_LIBS}${PYTHON_DYLIB}" "${DEPENDDIR}/lib;${DEPENDDIR}/Frameworks;${DEPENDDIR}/lib64" COMPONENT RUNTIME)

  if(TARGET_OSX)
    message("Signing binary: ${CMAKE_INSTALL_PREFIX}/${TARGET}")
    execute_process(COMMAND codesign --force --sign "Developer ID Application: Plex Inc." -r ${PLEXDIR}/Resources/requirement.bin "${CMAKE_INSTALL_PREFIX}/${EXECUTABLE_NAME}.app")
  endif(TARGET_OSX)
else(NOT TARGET_WIN32)
  # On win we use this for code signing
  file(GLOB_RECURSE EXES ${CMAKE_INSTALL_PREFIX}/*.exe)
  set(ENV{errorlevel} 1)

  foreach(e ${EXES})
    message("-- Signing: ${PLEXDIR}/scripts/WindowsSign.cmd ${e}")
    execute_process(COMMAND ${PLEXDIR}/scripts/WindowsSign.cmd "${e}" RESULT_VARIABLE RES)
  endforeach(e ${EXES})

  file(GLOB_RECURSE DLLS ${CMAKE_INSTALL_PREFIX}/*.dll)
  foreach(d ${DLLS})
    message("-- Signing: ${d}")
    execute_process(COMMAND ${PLEXDIR}/scripts/WindowsSign.cmd "${d}" RESULT_VARIABLE RES)
  endforeach(d ${DLLS})
endif(NOT TARGET_WIN32)

