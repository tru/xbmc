include_directories(${CMAKE_CURRENT_SOURCE_DIR})
find_all_sources(. squish_SRCS)

if(CMAKE_C_COMPILER_ID STREQUAL "Clang" OR CMAKE_C_COMPILER_ID STREQUAL "GNU")
  set(CMAKE_C_FLAGS_DEBUG "-O3")
  set(CMAKE_CXX_FLAGS_DEBUG "-O3")
elseif(CMAKE_C_COMPILER_ID STREQUAL "MSVC")
  set(CMAKE_C_FLAGS_DEBUG "/O2")
  set(CMAKE_CXX_FLAGS_DEBUG "/O2")
endif(CMAKE_C_COMPILER_ID STREQUAL "Clang" OR CMAKE_C_COMPILER_ID STREQUAL "GNU")

if(CMAKE_SSE_CFLAGS AND NOT TARGET_ATV2)
  add_definitions(-DSQUISH_USE_SSE=2)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${CMAKE_SSE_CFLAGS}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_SSE_CFLAGS}")
endif(CMAKE_SSE_CFLAGS AND NOT TARGET_ATV2)

set(TARGET_C_FLAGS ${CMAKE_C_FLAGS})
unset(CMAKE_C_FLAGS)
unset(CMAKE_CXX_FLAGS)

add_library(lib_squish-${TARGET_ARCH} STATIC ${squish_SRCS})
set_target_properties(lib_squish-${TARGET_ARCH} PROPERTIES COMPILE_FLAGS "${TARGET_C_FLAGS}")

if(NOT NATIVE_ARCH STREQUAL TARGET_ARCH)
  add_library(lib_squish-${NATIVE_ARCH} STATIC ${squish_SRCS})
  set_target_properties(lib_squish-${NATIVE_ARCH} PROPERTIES COMPILE_FLAGS "-arch ${NATIVE_ARCH} ${CMAKE_SSE_CFLAGS}")
endif(NOT NATIVE_ARCH STREQUAL TARGET_ARCH)